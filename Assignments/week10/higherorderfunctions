const countries = ['Finland', 'Sweden', 'Denmark', 'Norway', 'IceLand']
const names = ['Asabeneh', 'Mathias', 'Elias', 'Brook']
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
const products = [
  { product: 'banana', price: 3 },
  { product: 'mango', price: 6 },
  { product: 'potato', price: ' ' },
  { product: 'avocado', price: 8 },
  { product: 'coffee', price: 10 },
  { product: 'tea', price: '' },
]


// Explain the difference between forEach, map, filter, and reduce.
// Define a callback function before you use it in forEach, map, filter or reduce.
// Use forEach to console.log each country in the countries array.
// Use forEach to console.log each name in the names array.
// Use forEach to console.log each number in the numbers array.
// Use map to create a new array by changing each country to uppercase in the countries array.
// Use map to create an array of countries length from countries array.
// Use map to create a new array by changing each number to square in the numbers array

forEach: Used for iterating over array elements and performing actions on each element.
map: Used for transforming each element of an array and creating a new array with the transformed values.
filter: Used for extracting a subset of elements from an array based on certain conditions.
reduce: Used for accumulating values of an array into a single output value.

// Define a callback function
function myCallback(item) {
  return item * 2; // Example transformation: doubling each element
}

// Sample array
const myArray = [1, 2, 3, 4, 5];

// Using forEach with the callback function
console.log("Using forEach:");
myArray.forEach(function (element) {
  console.log(myCallback(element));
});

// Using map with the callback function
console.log("\nUsing map:");
const mappedArray = myArray.map(myCallback);
console.log(mappedArray);

// Using filter with the callback function
console.log("\nUsing filter:");
const filteredArray = myArray.filter(function (element) {
  return element > 2; // Example condition: selecting elements greater than 2
});
console.log(filteredArray);

// Using reduce with the callback function
console.log("\nUsing reduce:");
const reducedValue = myArray.reduce(function (accumulator, currentValue) {
  return accumulator + currentValue; // Example operation: summing all elements
}, 0);
console.log(reducedValue);



// Use forEach to console.log each country in the countries array.
const countries = ['Finland', 'Sweden', 'Denmark', 'Norway', 'IceLand'];
    countries.forEach(country => {
        console.log(country);

// Use forEach to console.log each name in the names array.

const names = ['Asabeneh', 'Mathias', 'Elias', 'Brook'];
names.forEach(name => {
    console.log(name);
});
const countries = ['Finland', 'Sweden', 'Denmark', 'Norway', 'IceLand'];
    countries.forEach(country => {
        console.log(country);

// Use forEach to console.log each name in the names array.


    const names = ['Asabeneh', 'Mathias', 'Elias', 'Brook'];
    names.forEach(name => {
        console.log(name);
    });

// Use forEach to console.log each number in the numbers array.

    const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    numbers.forEach(number => {
        console.log(numb
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const squaredNumbers = numbers.map(num => num ** 2);
console.log(squaredNumbers);